{"ast":null,"code":"//import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counterSlice';\nimport authReducer from './authSlice';\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//    if (action.type === 'increment') {\n//       return { ...state, counter: state.counter + 1}\n//    }\n//\n//    if (action.type === 'increase') {\n//       return {\n//          counter: state.counter + action.amount,\n//          showCounter: state.showCounter\n//       }\n//    }\n//\n//    if (action.type === 'decrement') {\n//       return {\n//          counter: state.counter - 1,\n//          showCounter: state.showCounter\n//       };\n//    }\n//\n//    if (action.type === 'toggle') {\n//       return {\n//         showCounter: !state.showCounter,\n//         counter: state.counter\n//       };\n//    }\n//\n//    return state;\n// };\n//const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"sources":["C:/workspace/react-course/redux-toolkit/src/store/index.js"],"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC1BI,EAAAA,OAAO,EAAE;AACNC,IAAAA,OAAO,EAAEJ,cADH;AAENK,IAAAA,IAAI,EAAEJ;AAFA;AADiB,CAAD,CAA5B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAeC,KAAf","sourcesContent":["//import { createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from './counterSlice';\r\nimport authReducer from './authSlice';\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      counter: counterReducer,\r\n      auth: authReducer\r\n   }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//    if (action.type === 'increment') {\r\n//       return { ...state, counter: state.counter + 1}\r\n//    }\r\n//\r\n//    if (action.type === 'increase') {\r\n//       return {\r\n//          counter: state.counter + action.amount,\r\n//          showCounter: state.showCounter\r\n//       }\r\n//    }\r\n//\r\n//    if (action.type === 'decrement') {\r\n//       return {\r\n//          counter: state.counter - 1,\r\n//          showCounter: state.showCounter\r\n//       };\r\n//    }\r\n//\r\n//    if (action.type === 'toggle') {\r\n//       return {\r\n//         showCounter: !state.showCounter,\r\n//         counter: state.counter\r\n//       };\r\n//    }\r\n//\r\n//    return state;\r\n// };\r\n\r\n//const store = createStore(counterReducer);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}